{"version":3,"sources":["components/shared/InputField.js","components/shared/SelectField.js","components/shared/TextareaField.js","components/AddForm.js","App.js","index.js"],"names":["InputField","label","id","type","name","value","placeholder","onChange","onBlur","error","checked","className","htmlFor","style","color","defaultProps","SelectField","options","optionList","map","option","key","TextareaField","cols","rows","row","AddForm","state","firstName","lastName","email","country","gender","file","bio","skills","html","css","javascript","touched","handleChange","e","target","setState","handleBlur","console","log","validate","errors","validator","isLength","min","max","isEmail","handleSubmit","preventDefault","formattedSkills","push","toUpperCase","data","this","onSubmit","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee7c7073.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n// const styles = {\n//   width: '100%',\n//   height: 45\n// }\n\nconst InputField = ({\n  label,\n  id,\n  type,\n  name,\n  value,\n  placeholder,\n  onChange,\n  onBlur,\n  error,\n  checked,\n  className\n}) => {\n  if (type === 'radio') {\n    return (\n      <div className={className ? className : 'form-group'}>\n        <input\n          type={type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          checked={checked}\n        />\n        {label && <label htmlFor={id}>{label}</label>}\n        {error && <small style={{ color: 'red' }}>{error}</small>}\n      </div>\n    )\n  } else if (type === 'checkbox') {\n    return (\n      <div className={className ? className : 'form-group'}>\n        <input\n          type={type}\n          name={name}\n          id={name}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          checked={checked}\n        />\n        {label && <label htmlFor={name}>{label}</label>}\n        {error && <small style={{ color: 'red' }}>{error}</small>}\n      </div>\n    )\n  }\n\n  return (\n    <div className={className ? className : 'form-group'}>\n      {label && <label htmlFor={name}>{label}</label>}\n      <input\n        type={type}\n        name={name}\n        id={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        \n      />\n      <br />\n      {error && <small style={{ color: 'red' }}>{error}</small>}\n    </div>\n  )\n}\nInputField.defaultProps = {\n  type: 'text',\n  placeholder: ''\n}\nInputField.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default InputField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SelectField = ({ options, label, name, value, onChange }) => {\n  const optionList = options.map(option => (\n    <option key={option.value} value={option.value}>\n      {option.label}\n    </option>\n  ))\n  return (\n    <div>\n      {label ? <label>{label}: </label> : ''}\n      <select name={name} value={value} onChange={onChange}>\n        {optionList}\n      </select>\n    </div>\n  )\n}\n\nSelectField.propTypes = {\n  label: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default SelectField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TextareaField = ({\n  label,\n  name,\n  cols,\n  rows,\n  value,\n  onChange,\n  className\n}) => {\n  return (\n    <div className={className ? className : 'form-group'}>\n      {label ? <p>{label}</p> : ''}\n      <textarea\n        name={name}\n        cols={cols}\n        row={rows}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nTextareaField.defaultProps = {\n  cols: 50,\n  rows: 10\n}\n\nTextareaField.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default TextareaField\n","import React, { Component } from 'react'\nimport InputField from './shared/InputField'\nimport validator from 'validator'\nimport SelectField from './shared/SelectField'\nimport TextareaField from './shared/TextareaField'\n\nclass AddForm extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    country: '',\n    gender: '',\n    file: '',\n    bio: '',\n    skills: {\n      html: false,\n      css: false,\n      javascript: false\n    },\n    touched: {\n      firstName: false,\n      lastName: false\n    }\n  }\n\n  handleChange = e => {\n    const { name, value, type, checked } = e.target\n    if (type === 'checkbox') {\n      this.setState({\n        skills: { ...this.state.skills, [name]: checked }\n      })\n    } else {\n      this.setState({ [name]: value })\n    }\n  }\n  handleBlur = e => {\n    const { name } = e.target\n\n    this.setState({\n      touched: { ...this.state.touched, [name]: true }\n    })\n\n    console.log('Blurring')\n  }\n\n  validate = () => {\n    const errors = {\n      firstName: '',\n      lastName: '',\n      email: ''\n    }\n    if (\n      this.state.touched.firstName &&\n      !validator.isLength(this.state.firstName, { min: 3, max: 12 })\n    ) {\n      errors.firstName = 'First name must be between 2 and 12 characters'\n    }\n    if (\n      this.state.touched.lastName &&\n      !validator.isLength(this.state.lastName, { min: 3, max: 12 })\n    ) {\n      errors.lastName = 'Last name must be between 2 and 12 characters'\n    }\n    if (this.state.touched.email && !validator.isEmail(this.state.email)) {\n      errors.email = 'A valid email is required'\n    }\n    return errors\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const {\n      firstName,\n      lastName,\n      email,\n      country,\n      gender,\n      bio,\n      file,\n      skills\n    } = this.state\n\n    const formattedSkills = []\n    for (const key in skills) {\n      console.log(key)\n      if (skills[key]) {\n        formattedSkills.push(key.toUpperCase())\n      }\n    }\n    const data = {\n      firstName,\n      lastName,\n      email,\n      country,\n      gender,\n      bio,\n      file,\n      skills: formattedSkills\n    }\n    console.log(data)\n  }\n  render() {\n    const errors = this.validate()\n    const options = [\n      {\n        value: '',\n        label: '-- Select Option--'\n      },\n      {\n        value: 'Finland',\n        label: 'Finland'\n      },\n      {\n        value: 'Sweden',\n        label: 'Sweden'\n      },\n      {\n        value: 'Norway',\n        label: 'Norway'\n      },\n      {\n        value: 'Denmark',\n        label: 'Denmark'\n      }\n    ]\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <fieldset>\n          <legend>React Form and Form Validation</legend>\n          <InputField\n            type='text'\n            name='firstName'\n            value={this.state.firstName}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            placeholder='First Name'\n            error={errors.firstName}\n          />\n          <InputField\n            type='text'\n            name='lastName'\n            value={this.state.lastName}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            placeholder='Last Name'\n            error={errors.lastName}\n          />\n          <InputField\n            type='email'\n            name='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            placeholder='Email'\n            error={errors.email}\n          />\n\n          <SelectField\n            options={options}\n            name='country'\n            onChange={this.handleChange}\n          />\n\n          <div>\n            <p>Gender</p>\n            <InputField\n              label='Female'\n              type='radio'\n              id='female'\n              name='gender'\n              value='Female'\n              onChange={this.handleChange}\n              checked={this.state.gender === 'Female'}\n            />\n            <InputField\n              label='Male'\n              id='male'\n              type='radio'\n              name='gender'\n              value='Male'\n              onChange={this.handleChange}\n              checked={this.state.gender === 'Male'}\n            />\n            <InputField\n              label='Other'\n              id='other'\n              type='radio'\n              name='gender'\n              value='Other'\n              onChange={this.handleChange}\n              checked={this.state.gender === 'Other'}\n            />\n          </div>\n\n          <div>\n            <p>Select your skills</p>\n            <InputField\n              label='HTML'\n              type='checkbox'\n              id='html'\n              name='html'\n              onChange={this.handleChange}\n            />\n            <InputField\n              label='CSS'\n              type='checkbox'\n              id='css'\n              name='css'\n              onChange={this.handleChange}\n            />\n            <InputField\n              label='JavaScript'\n              type='checkbox'\n              id='javascript'\n              name='javascript'\n              onChange={this.handleChange}\n            />\n            <InputField\n              label='React'\n              type='checkbox'\n              id='react'\n              name='React'\n              onChange={this.handleChange}\n            />\n          </div>\n          <TextareaField\n            label='Bio'\n            name='bio'\n            value={this.state.bio}\n            onChange={this.handleChange}\n          />\n          <InputField type='file' name='file' onChange={this.handleChange} />\n          <button>Submit</button>\n        </fieldset>\n      </form>\n    )\n  }\n}\n\nexport default AddForm\n","import React, { Component } from 'react'\nimport './App.css'\nimport AddForm from './components/AddForm'\n\nclass App extends Component {\n  state = {}\n  render() {\n    return (\n      <div className='App'>\n        <AddForm />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}